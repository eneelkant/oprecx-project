<?php

/**
 * This is the model base class for the table "{{organization_metas}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "OrganizationMetas".
 *
 * Columns in table "{{organization_metas}}" available as properties of the model,
 * followed by relations of table "{{organization_metas}}" available as properties of the model.
 *
 * @property integer $org_id
 * @property string $meta_name
 * @property string $meta_value
 * @property string $created
 * @property string $updated
 *
 * @property Organizations $org
 */
abstract class BaseOrganizationMetas extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{organization_metas}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'OrganizationMetas|OrganizationMetases', $n);
	}

	public static function representingColumn() {
		return 'meta_value';
	}

	public function rules() {
		return array(
			array('org_id, meta_name, meta_value, created, updated', 'required'),
			array('org_id', 'numerical', 'integerOnly'=>true),
			array('meta_name', 'length', 'max'=>255),
			array('org_id, meta_name, meta_value, created, updated', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'org' => array(self::BELONGS_TO, 'Organizations', 'org_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'org_id' => null,
			'meta_name' => Yii::t('app', 'Meta Name'),
			'meta_value' => Yii::t('app', 'Meta Value'),
			'created' => Yii::t('app', 'Created'),
			'updated' => Yii::t('app', 'Updated'),
			'org' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('org_id', $this->org_id);
		$criteria->compare('meta_name', $this->meta_name, true);
		$criteria->compare('meta_value', $this->meta_value, true);
		$criteria->compare('created', $this->created, true);
		$criteria->compare('updated', $this->updated, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}