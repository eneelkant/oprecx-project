<?php

/**
 * This is the model base class for the table "{{form_fields}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "FormFields".
 *
 * Columns in table "{{form_fields}}" available as properties of the model,
 * followed by relations of table "{{form_fields}}" available as properties of the model.
 *
 * @property integer $field_id
 * @property integer $form_id
 * @property string $name
 * @property string $type
 * @property string $desc
 * @property integer $weight
 * @property integer $required
 * @property string $options
 * @property string $created
 *
 * @property Forms $form
 * @property mixed $oprecxUsers
 */
abstract class BaseFormFields extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{form_fields}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'FormFields|FormFields', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('form_id, name, type, desc, created', 'required'),
			array('form_id, weight, required', 'numerical', 'integerOnly'=>true),
			array('name, type', 'length', 'max'=>255),
			array('options', 'safe'),
			array('weight, required, options', 'default', 'setOnEmpty' => true, 'value' => null),
			array('field_id, form_id, name, type, desc, weight, required, options, created', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'form' => array(self::BELONGS_TO, 'Forms', 'form_id'),
			'oprecxUsers' => array(self::MANY_MANY, 'Users', '{{form_values}}(field_id, user_id)'),
		);
	}

	public function pivotModels() {
		return array(
			'oprecxUsers' => 'FormValues',
		);
	}

	public function attributeLabels() {
		return array(
			'field_id' => Yii::t('app', 'Field'),
			'form_id' => null,
			'name' => Yii::t('app', 'Name'),
			'type' => Yii::t('app', 'Type'),
			'desc' => Yii::t('app', 'Desc'),
			'weight' => Yii::t('app', 'Weight'),
			'required' => Yii::t('app', 'Required'),
			'options' => Yii::t('app', 'Options'),
			'created' => Yii::t('app', 'Created'),
			'form' => null,
			'oprecxUsers' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('field_id', $this->field_id);
		$criteria->compare('form_id', $this->form_id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('type', $this->type, true);
		$criteria->compare('desc', $this->desc, true);
		$criteria->compare('weight', $this->weight);
		$criteria->compare('required', $this->required);
		$criteria->compare('options', $this->options, true);
		$criteria->compare('created', $this->created, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}