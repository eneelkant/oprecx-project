<?php

/**
 * This is the model base class for the table "{{images}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Images".
 *
 * Columns in table "{{images}}" available as properties of the model,
 * followed by relations of table "{{images}}" available as properties of the model.
 *
 * @property integer $img_id
 * @property string $file_path
 * @property string $file_url
 * @property integer $width
 * @property integer $height
 * @property string $created
 *
 * @property Organizations[] $organizations
 * @property Users[] $users
 */
abstract class BaseImages extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{images}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Images|Images', $n);
	}

	public static function representingColumn() {
		return 'file_path';
	}

	public function rules() {
		return array(
			array('file_path, file_url, width, height, created', 'required'),
			array('width, height', 'numerical', 'integerOnly'=>true),
			array('file_path, file_url', 'length', 'max'=>255),
			array('img_id, file_path, file_url, width, height, created', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'organizations' => array(self::HAS_MANY, 'Organizations', 'img_id'),
			'users' => array(self::HAS_MANY, 'Users', 'img_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'img_id' => Yii::t('app', 'Img'),
			'file_path' => Yii::t('app', 'File Path'),
			'file_url' => Yii::t('app', 'File Url'),
			'width' => Yii::t('app', 'Width'),
			'height' => Yii::t('app', 'Height'),
			'created' => Yii::t('app', 'Created'),
			'organizations' => null,
			'users' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('img_id', $this->img_id);
		$criteria->compare('file_path', $this->file_path, true);
		$criteria->compare('file_url', $this->file_url, true);
		$criteria->compare('width', $this->width);
		$criteria->compare('height', $this->height);
		$criteria->compare('created', $this->created, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}