<?php

/**
 * This is the model base class for the table "{{org_elms}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "OrgElms".
 *
 * Columns in table "{{org_elms}}" available as properties of the model,
 * followed by relations of table "{{org_elms}}" available as properties of the model.
 *
 * @property integer $elm_id
 * @property integer $org_id
 * @property string $name
 * @property integer $weight
 * @property string $created
 * @property string $updated
 *
 * @property mixed $oprecxDivisions
 * @property Forms $forms
 * @property InterviewSlots $interviewSlots
 * @property Organizations $org
 */
abstract class BaseOrgElms extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{org_elms}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'OrgElms|OrgElms', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('org_id, name, created', 'required'),
			array('org_id, weight', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>255),
			array('updated', 'safe'),
			array('weight, updated', 'default', 'setOnEmpty' => true, 'value' => null),
			array('elm_id, org_id, name, weight, created, updated', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'oprecxDivisions' => array(self::MANY_MANY, 'Divisions', '{{division_elms}}(elm_id, div_id)'),
			'forms' => array(self::HAS_ONE, 'Forms', 'elm_id'),
			'interviewSlots' => array(self::HAS_ONE, 'InterviewSlots', 'elm_id'),
			'org' => array(self::BELONGS_TO, 'Organizations', 'org_id'),
		);
	}

	public function pivotModels() {
		return array(
			'oprecxDivisions' => 'DivisionElms',
		);
	}

	public function attributeLabels() {
		return array(
			'elm_id' => Yii::t('app', 'Elm'),
			'org_id' => null,
			'name' => Yii::t('app', 'Name'),
			'weight' => Yii::t('app', 'Weight'),
			'created' => Yii::t('app', 'Created'),
			'updated' => Yii::t('app', 'Updated'),
			'oprecxDivisions' => null,
			'forms' => null,
			'interviewSlots' => null,
			'org' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('elm_id', $this->elm_id);
		$criteria->compare('org_id', $this->org_id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('weight', $this->weight);
		$criteria->compare('created', $this->created, true);
		$criteria->compare('updated', $this->updated, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}